describe('Create category', () => {
    const adminEmail = Cypress.env('ADMIN_EMAIL')
    const adminPassword = Cypress.env('ADMIN_PASSWORD')
    
    it("Try create empty category", () => {
        cy.loadDatabaseDump('empty_categories_dump')
        cy.goToCategories(adminEmail, adminPassword)
        cy.get('.button').children().contains('New Category').click()
        cy.location('pathname').should('eq', '/admin/categories/new')
        cy.get('button').contains('Save').click()
        cy.location('pathname').should('eq', '/admin/categories/new')
        cy.get('.form-field-container').filter(':contains("Name")').should('contain', 'This field can not be empty')
        cy.get('.form-field-container').filter(':contains("Url key")').should('contain', 'This field can not be empty')  
    })

    it("Try create category without url key", () => {
        cy.loadDatabaseDump('empty_categories_dump')
        cy.goToCategories(adminEmail, adminPassword)
        cy.get('.button').children().contains('New Category').click()
        cy.location('pathname').should('eq', '/admin/categories/new')
        cy.get('.form-field-container').filter(':contains("Name")').find('input').type('cos')
        cy.get('button').contains('Save').click()
        cy.location('pathname').should('eq', '/admin/categories/new')
        cy.get('.form-field-container').filter(':contains("Name")').should('not.contain', 'This field can not be empty')
        cy.get('.form-field-container').filter(':contains("Url key")').should('contain', 'This field can not be empty')  
    })

    it("Try create category without name", () => {
        cy.loadDatabaseDump('empty_categories_dump')
        cy.goToCategories(adminEmail, adminPassword)
        cy.get('.button').children().contains('New Category').click()
        cy.location('pathname').should('eq', '/admin/categories/new')
        cy.get('.form-field-container').filter(':contains("Url key")').find('input').type('cos')
        cy.get('button').contains('Save').click()
        cy.location('pathname').should('eq', '/admin/categories/new')
        cy.get('.form-field-container').filter(':contains("Name")').should('contain', 'This field can not be empty')
        cy.get('.form-field-container').filter(':contains("Url key")').should('not.contain', 'This field can not be empty')  
    })

    it("Try create category with required data", () => {
        cy.loadDatabaseDump('empty_categories_dump')
        cy.goToCategories(adminEmail, adminPassword)
        cy.get('.button').children().contains('New Category').click()
        cy.location('pathname').should('eq', '/admin/categories/new')
        cy.get('.form-field-container').filter(':contains("Name")').find('input').type('cos')
        cy.get('.form-field-container').filter(':contains("Url key")').find('input').type('cos')
        cy.get('button').contains('Save').click()
        cy.location('pathname').should('include', '/admin/categories/edit')
        cy.get('.form-field-container').filter(':contains("Name")').find('input').should('have.value', 'cos')
        cy.get('.form-field-container').filter(':contains("Url key")').find('input').should('have.value', 'cos')  
    })

    it("Try create category with whitespace name", () => {
        cy.loadDatabaseDump('empty_categories_dump')
        cy.goToCategories(adminEmail, adminPassword)
        cy.get('.button').children().contains('New Category').click()
        cy.location('pathname').should('eq', '/admin/categories/new')
        cy.get('.form-field-container').filter(':contains("Name")').find('input').type(' ')
        cy.get('.form-field-container').filter(':contains("Url key")').find('input').type('cos')
        cy.get('button').contains('Save').click()
        cy.wait(3000)
        cy.location('pathname').should('eq', '/admin/categories/new')
        cy.get('.Toastify__toast-container').should('exist')
    })
})